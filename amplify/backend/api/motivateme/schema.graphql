type Boost
	@model
  @auth(
    rules: [
      { allow: owner, operations: [create] }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  content: String
  user: PublicUser @belongsTo
	motive: Motive @belongsTo
	yays: [Yay] @hasMany
	nays: [Nay] @hasMany
}

type Motive
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create] }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  content: String
  user: PublicUser @belongsTo
	boosts: [Boost] @hasMany
	complete: Boolean
	following: [Follow] @hasMany
}

type PublicUser
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create] }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  username: String!
  motives: [Motive] @hasMany
	boosts: [Boost] @hasMany
	followed: [Follow] @hasMany
	yays: [Yay] @hasMany
	nays: [Nay] @hasMany
}

type Follow
	@model
  @auth(
    rules: [
      { allow: owner, operations: [create] }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  user: PublicUser @belongsTo
  motive: Motive @belongsTo
	timer: String
}


type Yay
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create] }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  user: PublicUser @belongsTo
	boost: Boost @belongsTo
}

type Nay
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create] }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  user: PublicUser @belongsTo
	boost: Boost @belongsTo
}