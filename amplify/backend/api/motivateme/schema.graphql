type Boost
  @model(timestamps: { createdAt: "createdAt", updatedAt: "createdAt" })
  @auth(
    rules: [
      { allow: owner, operations: [create] }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  content: String
  user: PublicUser @belongsTo
  motive: Motive @belongsTo
  yays: [Yay] @hasMany
  nays: [Nay] @hasMany
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Motive
  @model(timestamps: { createdAt: "createdAt", updatedAt: "createdAt" })
  @auth(
    rules: [
      { allow: owner, operations: [create] }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  content: String
  user: PublicUser @belongsTo
  boosts: [Boost] @hasMany
  complete: Boolean
  following: [Follow] @hasMany
  tag: Tag @belongsTo
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Tag
  @model(timestamps: { createdAt: "createdAt", updatedAt: "createdAt" })
  @auth(
    rules: [
      { allow: owner, operations: [create] }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  name: String! @index(name: "byTagName", queryField: "tagsByName")
  motives: [Motive] @hasMany
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type PublicUser
  @model(timestamps: { createdAt: "createdAt", updatedAt: "createdAt" })
  @auth(
    rules: [
      { allow: owner, operations: [create] }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  username: String! @index(name: "byUsername", queryField: "userByUsername")
  motives: [Motive] @hasMany
  boosts: [Boost] @hasMany
  followed: [Follow] @hasMany
  yays: [Yay] @hasMany
  nays: [Nay] @hasMany
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type PrivateUser
  @model(timestamps: { createdAt: "createdAt", updatedAt: "createdAt" })
  @auth(rules: [{ allow: owner, operations: [create, read] }]) {
  id: ID!
  username: String!
  email: String!
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Follow
  @model(timestamps: { createdAt: "createdAt", updatedAt: "createdAt" })
  @auth(
    rules: [
      { allow: owner, operations: [create] }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  user: PublicUser @belongsTo
  motive: Motive @belongsTo
  timer: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Yay
  @model(timestamps: { createdAt: "createdAt", updatedAt: "createdAt" })
  @auth(
    rules: [
      { allow: owner, operations: [create] }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  user: PublicUser @belongsTo
  boost: Boost @belongsTo
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Nay
  @model(timestamps: { createdAt: "createdAt", updatedAt: "createdAt" })
  @auth(
    rules: [
      { allow: owner, operations: [create] }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  user: PublicUser @belongsTo
  boost: Boost @belongsTo
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}
